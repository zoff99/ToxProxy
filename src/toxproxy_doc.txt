

    ToxProxy
    ========


friend_lossless_packet_cb:
    if data[0] == CONTROL_PROXY_MESSAGE_TYPE_NOTIFICATION_TOKEN
        get notification token from master and save it
    if data[0] == CONTROL_PROXY_MESSAGE_TYPE_FRIEND_PUBKEY_FOR_PROXY
        receive tox publickey for 1 friend from master, try to add that publickey
            with no friend request

friend_request_cb:
    first ever friend request is assumed to be the master, friend is added and saved as master
    every other friend request after that is canceled



########### --------- message --------- ###########

friend_message_cb:
    ignore normal (non-messageV2) text messages

friend_sync_message_v2_cb:
    noop

friend_message_v2_cb:
    incoming messageV2 text message.
    if message is from master then ignore it.
    if message is not from master:
    -> writeMessageHelper
        msg type = TOX_FILE_KIND_MESSAGEV2_SEND
            ./messages/<sender pubkey in hex uppercase>/<YYYY-mm-DD_HHMM-SS,[6 char us]>.txtS
            file content is orig messageV2 content
        ping push gateway if token is valid
    -> tox_util_friend_send_msg_receipt_v2
        send message v2 receipt to sender

friend_read_receipt_message_v2_cb:
    incoming messageV2 receipt.
    check if this is an answer for a message we synced (-> is_answer_to_synced_message)
    if answer for synced message -> delete corresponding message(s)
    if not an answer for synced message -> writeMessageHelper
        -> writeMessage
            -> write file:
                msg type = TOX_FILE_KIND_MESSAGEV2_ANSWER
                    ./messages/<sender pubkey in hex uppercase>/<YYYY-mm-DD_HHMM-SS,[6 char us]>.txtA
                    file content is orig messageV2 content

########### --------- message --------- ###########



########### -------- conference ------- ###########

conference_invite_cb:
    join invited conference if inviter is master

conference_peer_list_changed_cb:
    save tox savefile

conference_message_cb:
    if conference message is not from master:
    -> writeConferenceMessageHelper
        -> writeConferenceMessage(is_group=false)
            -> write file:
                ./messages/<conference ID in hex uppercase>/<YYYY-mm-DD_HHMM-SS,[6 char us]>.txtS
                file content is message and sender wrapped as TOX_FILE_KIND_MESSAGEV2_SEND
                    <peerpubkey><message text orig>
                ping push gateway if token is valid

########### -------- conference ------- ###########



########### -------- main loop -------- ###########

main loop
-> send_sync_msgs (iterate over all directories in ./messages/)
    -> send_sync_msgs_of_friend (iterate over all files in ./messages/<key>/ where the filename ends with "_")
        -> send_sync_msg_single
            if file is txtA
                send TOX_FILE_KIND_MESSAGEV2_ANSWER
                    -> write file:
                        ./messages/<sender pubkey in hex uppercase>/<YYYY-mm-DD_HHMM-SS,[6 char us]>.txtA
                    -> tox_util_friend_send_sync_message_v2
                        send message v2 sync message to sender
            if file is txtS
                send TOX_FILE_KIND_MESSAGEV2_SEND
                    -> write file:
                        ./messages/<conference ID in hex uppercase>/<YYYY-mm-DD_HHMM-SS,[6 char us]>.txtS
                    -> tox_util_friend_send_sync_message_v2
                        send message v2 sync message to sender

continue main loop^^^

########### -------- main loop -------- ###########

            



